const glossary = {
    blockchain: { name: "Blockchain", definition: "A blockchain is a decentralized and distributed digital ledger that records transactions across multiple computers. It ensures transparency, security, and immutability by forming a chain of blocks, each containing a set of transactions, and utilizing cryptographic techniques to prevent unauthorized alterations." },
    block: { name: "Block", definition: "A block is a fundamental unit of data storage in a blockchain that stores information such as transactions, timestamps, and a unique identification code called a hash. Blocks are added to the blockchain in a linear, chronological order, forming a chain of blocks, hence the name \"blockchain.\" Once a block is validated and added to the chain, it cannot be modified or deleted, ensuring the integrity and immutability of the blockchain." },
    seed_phrase: { name: "Seed Phrase", definition: "A Seed Phrase, also known as a Recovery Phrase, is a sequence of words generated by blockchain wallets that provide access to the cryptocurrencies linked to that wallet. It is crucial to keep the Seed Phrase confidential and secure as it serves as a backup for accessing the funds associated with the wallet. It is recommended to store the Seed Phrase in a safe location to prevent any unauthorized access or loss of funds." },
    dapp: { name: "DApp", definition: "A DApp (Decentralized Application) is a type of application that functions independently through the use of smart contracts on the blockchain. Similar to traditional apps, DApps provide value and usefulness to users who interact with them on the blockchain." },
    private_key: { name: "Private Key", definition: "A private key is a cryptographic number that functions like a password. It is utilized to generate signatures that can be authenticated without compromising the security of the private keys. Private keys are usually created or derived from the seed phrase and play a crucial role in securing one's blockchain assets." },
    address: { name: "Address", definition: "A blockchain address is a unique alphanumeric string that identifies the location of a specific wallet on the blockchain. This address enables users to send and receive cryptocurrency from other users or platforms on the blockchain and serves as a public identifier for that particular wallet." },
    validator_node: { name: "Validator Node", definition: "A validator node is responsible for maintaining a Matrixchain. It collects transactions on the Matrixchain and produces state transition proofs for the validators to verify." },
    extrinsic: { name: "Extrinsic", definition: "Extrinsic refers to state changes that originate from outside the blockchain system, such as user actions or events. There are two types of extrinsics: \"inherents,\" which are system-generated and do not require validation, and \"transactions\" which require validation by the network validators before being added to the blockchain." },
    governance: { name: "Governance", definition: "Governance refers to the decision-making process in a network to determine permissible changes, such as modifications to code or transfer of funds. In Enjin, the governance system is on-chain and based on stakeholder voting." },
    interoperability: { name: "Interoperability", definition: "Interoperability refers to the capability of different systems to exchange and use information. This concept is often applied to cross-chain technologies, where different blockchain networks can communicate and share data with each other." },
    pos: { name: "PoS", definition: "Proof of Stake (PoS) is a consensus mechanism used by some blockchains to validate transactions and create new blocks. In PoS, validators are selected to create new blocks based on the amount of cryptocurrency they hold and \"stake\" in the network. The more stake a validator has, the more likely they are to be chosen to validate transactions and earn rewards in the form of newly created cryptocurrency." },
    tps: { name: "TPS", definition: "TPS is an acronym for Transactions Per Second, which refers to the number of transactions a network can process per second while producing new blocks and verifying transactions." },
    stake: { name: "Stake", definition: "Staking refers to the process of engaging in transaction validation or lending tokens to earn staking rewards from a blockchain protocol or exchange." },
    enjin_platform: { name: "Enjin Platform", definition: "The Enjin Platform is a Platform as a Service (PaaS) designed for blockchain applications, specifically for creating and managing blockchain games. It eliminates the complexity and burden of building and maintaining the infrastructure associated with blockchain game development, providing a suite of powerful and flexible tools and services for developers to create innovative and cutting-edge blockchain games and applications." },
    nft_io: { name: "NFT.io", definition: "NFT.io is a comprehensive NFT marketplace that provides users with the ability to purchase, trade, and create NFTs using the full capabilities of the Enjin Platform." },
    query: { name: "Query", definition: "A query is an object that clients can use to request specific information from a server, such as a list of available addresses or tokens on the Enjin Platform." },
    mutation: { name: "Mutation", definition: "A mutation is a type of operation in the Enjin Platform that allows for modifying or updating data. Unlike a query, which is used for read-only operations, mutations are designed for write operations, such as creating new tokens, minting existing ones, or setting metadata for tokens." },
    platform_schema: { name: "Platform Schema", definition: "The Enjin Platform Schema refers to a structured representation of the data and functionalities provided by the Enjin Platform, which developers can use to integrate the platform into their projects using the GraphQL language." },
    ipfs: { name: "IPFS", definition: "IPFS stands for InterPlanetary File System, which is a decentralized protocol and peer-to-peer network designed for storing and sharing files in a distributed manner. IPFS uses content-addressing to uniquely identify each file in a global namespace, making it possible for all computing devices to connect and share data." },
    currency: { name: "Currency", definition: "Within the Enjin Ecosystem, currency specifically refers to ENJ, which serves as the native cryptocurrency facilitating transactions and interactions. ENJ is used as a digital currency to purchase, sell, and trade virtual assets, as well as to incentivize and reward participants within the ecosystem." },
    enjin_beam_credits: { name: "Enjin Beam Credits", definition: "Enjin Beam Credits is a system that enables users to obtain credits by exchanging tokens or engaging in specific activities. With these credits, users can use the Enjin-managed version of Beam without having to create their own integration with the Enjin Platform or learn how to use the API to develop a Beam." },
    auction: { name: "Auction", definition: "In the Enjin Ecosystem, auctions provide a decentralized and transparent platform for users to sell and purchase virtual assets. Users can list their assets for auction, specify the duration of the auction, and set a starting price. Other users can place bids on the assets, and at the end of the auction period, the highest bidder wins the asset." },
    fixed_price_sale: { name: "Fixed Price Sale", definition: "The Fixed Price Sale feature within the Enjin Ecosystem enables users to offer their virtual assets for sale directly to other users at a set price. This approach simplifies the process of buying and selling assets as it does not involve any bidding or negotiation." },
    create_collection: { name: "Create Collection", definition: "The Create Collection feature in the Enjin Ecosystem allows users to personalize their own collections of virtual assets. With this functionality, users can specify the name, description, and attributes of the collection, and then add their virtual assets to it. This provides users with a way to manage their assets in a customized manner that reflects their preferences and goals." },
    create_asset: { name: "Create Asset", definition: "The Enjin Ecosystem provides a feature called Create Asset, which allows users to create their own NFTs. NFTs are one-of-a-kind digital assets that can represent a wide range of digital or physical items, such as art, music, games, or real estate. With Create Asset, users can specify the attributes, properties, and metadata of their assets and mint them on the Enjin blockchain, making them easily verifiable and tradable within the ecosystem." },
    royalties: { name: "Royalties", definition: "In the Enjin Ecosystem, royalties represent a percentage of the revenue that creators or owners of virtual assets can receive each time their assets are sold or traded by other users. This functionality provides a continuous stream of income to creators and incentivizes them to keep producing valuable virtual assets within the ecosystem." },
    node: { name: "Node", definition: "A node in a blockchain network is a decentralized component that verifies and validates transactions and blocks. It functions as a computer or a device that executes software, allowing it to connect to the blockchain network and interact with other nodes." },
    matrixchain: { name: "Matrixchain", definition: "The Matrixchain is a data structure designed to maintain global coherence and be validated by the Relaychain validators. It consists of parallelized chains that operate alongside the Relaychain, and while it often has a blockchain-like structure, it does not necessarily need to be a blockchain." },
    validator: { name: "Validator", definition: "Validators within the Matrixchain ecosystem are essential participants responsible for validating transactions and adding new blocks to the Relaychain and all Matrixchains. This enables cross-chain transactions to be executed via the Relaychain. Off-chain consensus is performed by Matrixchain validators, who submit candidate receipts to the transaction pool for a block producer to include on-chain. Relaychain validators ensure that each Matrixchain adheres to its specific rules and enable message passing between shards in a trustless environment." },
    relaychain: { name: "Relaychain", definition: "A relaychain is a central chain in a network of blockchains that helps facilitate interoperability and scalability among different blockchains, or parachains, connected to it. It is a core concept in the Enjin Blockchain, allowing various matrixchains to communicate and share information efficiently and securely." },
    token: { name: "Token", definition: "Tokens operate on existing blockchains and can be used to represent a variety of assets or utilities, such as representing a stake, ownership, or for access to a specific network or service. Tokens can be customized to have a wide range of functionalities." },
    coin: { name: "Coin", definition: "Coins, like Enjin Coin, are integral to their own blockchain, primarily facilitating transactions and network security. While they are central currencies, blockchains like Enjin's also host tokens, representing varied assets or utilities, thereby enriching the ecosystem beyond just the native currency, ensuring a multifunctional platform." },
    pallet: { name: "Pallet", definition: "A pallet is a module or plugin in the Enjin Blockchain that contains a specific set of features and functionalities. Pallets allow developers to add new features and capabilities to the blockchain, facilitating customization and the development of various decentralized applications and services. Each pallet contains the code and logic required to execute a specific function within the Enjin Ecosystem." },
    fuel_tank: { name: "Fuel Tank", definition: "A fuel tank is a shared fund used by multiple accounts for transactions. It's created and adjusted with specific commands and has rules determining how it pays transaction fees and provides storage deposits." },
    pool: { name: "Pool", definition: "A staking pool is a group of holders who combine their resources to participate in a network's proof-of-stake (PoS) consensus mechanism. By joining a staking pool, individual stakeholders have a higher chance of being chosen to validate transactions and earn rewards, compared to staking alone. The rewards are then distributed among the pool participants based on their contributions." },
    graphql: { name: "GraphQL", definition: "GraphQL is a query language for APIs, enabling clear definitions of the structure of API requests. It allows clients to request exactly the data they need, nothing more or less, making it flexible and efficient. Developed by Facebook, GraphQL provides a more powerful and flexible way to interact with databases through APIs compared to REST." },
    sdk: { name: "SDK", definition: "An SDK, or Software Development Kit, is a set of tools, libraries, code samples, processes, and guides that developers use to create applications for specific programming environments, operating systems, or platforms. It simplifies the development process, allowing developers to focus more on application design and logic rather than mundane, repetitive tasks." },
    enjin_platform_api: { name: "Enjin Platform API", definition: "Enjin's GraphQL API provides a server-based interface that allows you to execute a range of queries and mutations. In other words, you can easily retrieve necessary information or execute transactions on the blockchain." },
    events: { name: "Events", definition: "With the Enjin Platform, developers can subscribe to events and receive real-time updates on any on-chain activities, eliminating the need to constantly poll the API for changes." },
    canary: { name: "Canary", definition: "Inspired by the \"canary in a coal mine\" concept. A canary testnet is an experimental, early-release network used for testing new features, upgrades, or changes in a blockchain protocol, acting as a warning or \"canary in a coal mine\" to identify potential issues before they are deployed on the mainnet. Canary testnets are often used in blockchain projects to ensure that new updates run smoothly and securely in a live environment without risking the main network's stability and security." },
    gas: { name: "Gas", definition: "Gas fees are transaction fees on blockchain networks, compensating miners or validators for processing and validating transactions and smart contracts. Gas fees fluctuate based on network congestion and complexity of transactions, and users can often choose to pay higher fees for faster transaction processing." },
    immutable: { name: "Immutable", definition: "Immutable, in the context of blockchain and technology, means that something is unchangeable or permanent. Once data is recorded, it cannot be altered or deleted, ensuring data integrity and historical accuracy." },
    mainnet: { name: "Mainnet", definition: "A mainnet is the main network of a blockchain where actual transactions take place in a distributed ledger, using the cryptocurrency for its intended purpose. It is the live, fully functional blockchain network where the value of the cryptocurrency is real, and transactions are final." },
    enjin_blockchain: { name: "Enjin Blockchain", definition: "Enjin Blockchain is a specialized blockchain network optimized for mass-market games and apps. Like Polkadot's parachains, Enjin has matrixchains, which enhance its functionality and interoperability, allowing various games and apps to operate seamlessly on a single network. Its on-chain mechanics are specifically tailored to support high-performance applications and provide a robust environment for developers to build and manage decentralized applications effectively." },
    enj: { name: "ENJ", definition: "Enjin Coin (ENJ) is the native coin of the Enjin Blockchain. It plays a pivotal role in facilitating transactions, enabling participation in network governance, and maintaining the blockchain's security, ensuring the network operates efficiently, securely, and permissionlessly." },
    testnet: { name: "Testnet", definition: "A testnet allows developers to test blockchain functionalities for free, ensuring that their implementations work correctly before launching on the mainnet. It is a sandbox environment where developers can experiment, debug, and test the performance of their applications or smart contracts without consuming real cryptocurrencies or risking valuable assets, as the tokens used in a testnet are valueless. This also ensures that items or assets are not permanently recorded on the blockchain during the testing phase." },
    collator: { name: "Collator", definition: "A Collator is a participant in the Enjin Ecosystem responsible for producing new block candidates to be added to the relay chain by validators. Collators maintain a full node of a specific matrixchain, gather transactions, and produce new block candidates to pass to the validators for verification and finalization." },
    sudo: { name: "sudo", definition: "'sudo' stands for \"super user do.\" It is a command-line utility in Unix-like operating systems that allows a permitted user to execute a command as the superuser (root) or another user, as specified by the security policy configured in the sudoers file." },
    enjin_beam: { name: "Enjin Beam", definition: "Enjin Beam is a feature that uses blockchain and QR code scanning to enable users to quickly and securely receive virtual assets within the Enjin ecosystem via their mobile devices. It facilitates the distribution of assets, including NFTs (Non-Fungible Tokens), with ease." },
    wallet_daemon: { name: "Wallet Daemon", definition: "The Wallet Daemon is a utility that automates the approval of transaction requests between the Enjin Platform and your wallet. Without the Wallet Daemon, every in-game blockchain transaction (such as sending a sword to a player) would need to be authorized manually through the Enjin Wallet. The Wallet Daemon manages an Enjin address linked to your Enjin account. When a transaction is initiated on the Enjin Platform, the Wallet Daemon receives the transaction, approves it by signing it, and then returns it to the Enjin Platform." },
    non_fungible_tokens: { name: "Non-Fungible Tokens", definition: "In contrast, Non-Fungible Tokens (NFTs) are distinct and cannot be substituted with other tokens as each NFT has its own unique identity. Examples of NFTs include original artwork, gaming characters, pets, and numbered collectibles. \n\nNFTs can be categorized into families, referred to as Grouped NFTs. These NFTs have a shared Base ID but still retain their uniqueness. An illustration of this concept would be an Iron Sword armory consisting of swords of different quality levels, brands, and individual histories, but all identifiable as Iron Swords. The significance of a particular sword to one individual may be based on its past ownership by a great warrior, while another person may consider the token's type to be more important depending on its usefulness." },
    enjin_coin: { name: "Enjin Coin", definition: "Enjin Coin (ENJ) is the native token of the Enjin Blockchain and plays a vital role in facilitating transactions on the network. It serves as the primary transaction fee and gas token, as well as the voting mechanism for network governance, consensus, and block nomination facilitated through ENJ staking. In addition to its utility functions, ENJ also serves as a medium of exchange within the ecosystem and rewards active community participation. The Enjin Blockchain is fully integrated with popular Enjin products, such as the Enjin Wallet, NFT Marketplace, Platform SDKs, and more, to provide a seamless end-to-end user experience." },
    backing_value: { name: "Backing Value", definition: "The backing value refers to Enjin Coin (ENJ) that is locked as a reserve for tokens on the Enjin Blockchain, ensuring that the blockchain isn't burdened with unnecessary data. When tokens are minted, a set amount of ENJ is allocated as a storage deposit. This mechanism optimizes the blockchain's efficiency by preventing the creation of low-value tokens and accounts that could cause network bloat." },
    transaction_fees: { name: "Transaction Fees", definition: "A transaction fee on the Enjin Blockchain is a charge applied to users when they execute transactions such as transferring tokens on the network. This fee is necessary to compensate the network validators for processing and securing the transactions on the blockchain. The amount of the fee can vary based on the type of transaction and the network's current demand and congestion. The fee ensures that transactions are processed efficiently and helps to prevent spam transactions on the network, maintaining the blockchain's integrity and performance." },
    token_id: { name: "Token ID", definition: "A Token ID is a unique number that identifies a specific token on a blockchain, distinguishing it from others." },
    metadata: { name: "Metadata", definition: "Metadata provides details about a token's data, like its description or structural details. Metadata includes information like name, image, and description, which defines the token's context and characteristics. Developers can add various media to NFTs, and this metadata can be stored on the blockchain or referenced off-chain via a .json file in a public repository." },
    graphiql_playground: { name: "GraphiQL Playground", definition: "GraphiQL Playground is a web-based IDE (Integrated Development Environment) that enables developers to interact with and test GraphQL APIs. It provides an intuitive interface to explore, document, and test queries and mutations for the Enjin Platform, improving the development experience for users. It is based on GraphiQL and was created by Prisma." },
    enjin_wallet: { name: "Enjin Wallet", definition: "The Enjin Wallet is a digital wallet app designed for users to securely store and manage their cryptocurrency and blockchain assets. It provides a range of features and functionality, making it suitable for traders, developers, and gamers alike." },
    enjin_wallet_app: { name: "Enjin Wallet App", definition: "The Enjin Wallet is a digital wallet app designed for users to securely store and manage their cryptocurrency and blockchain assets. It provides a range of features and functionality, making it suitable for traders, developers, and gamers alike." },
    wallet_account: { name: "Wallet Account", definition: "A wallet account is imported from a blockchain wallet into a wallet application." },
    transaction: { name: "Transaction", definition: "A transaction is a fundamental operation on a blockchain, representing the transfer of assets or information from one participant to another. It typically includes sender and receiver addresses, a value or payload, and cryptographic signatures for verification." },
    storage_deposit: { name: "Storage Deposit", definition: "A Storage Deposit refers to a specific amount of ENJ tokens that must be deposited during various operations on the Enjin Blockchain for security and scaling purposes. For example, creating a collection requires a storage deposit of 6.25 ENJ, minting a token requires a storage deposit of 0.01 ENJ, and storing attributes, fuel tank accounts, and other values on-chain also requires a storage deposit. These deposits are not fees; they are refundable deposits that are returned to the issuer when the storage used for the operation is released. For instance, when a collection is destroyed, the collection owner will receive the storage deposit back." },
    token_account_deposit: { name: "Token Account Deposit", definition: "A Storage Deposit of 0.01 ENJ is required to store a TokenAccount on-chain.\nA TokenAccount is created when an account has a token balance of 1 or more, and it is destroyed when that balance becomes zero, in which case the storage deposit is released." },
    enj_infusion: { name: "ENJ Infusion", definition: "ENJ Infusion refers to Enjin Coins (ENJ) that are locked in a token on the Enjin Blockchain.\nThe token holder can retrieve the Infused ENJ by burning the token. This action is called \"Melting\"." },
    primythical_chest: { name: "Primythical Chest", definition: "The Primythical Chest is a specific type of Multiverse Item within the Enjin ecosystem, designed as a promotional tool with an infinite supply. It serves as a primary method for onboarding new players into games that are part of the multiverse. Players can mint the Primythical Chest for free, often by scanning a QR code, and use it across multiple games that have integrated this item. The Primythical Chest is intended to introduce players to the concept of cross-game utility and to drive engagement by encouraging them to explore different games where the chest and other Multiverse Items have value." },
    utility: { name: "Utility", definition: "NFT utility refers to the practical benefits or functions that a Non-Fungible Token provides to its owner beyond its collectible or speculative value. This can include granting access to exclusive events or communities, offering usable items in video games, providing voting rights in decentralized organizations, unlocking premium content, enabling physical item redemption, representing fractional ownership of assets, or granting commercial usage rights for associated media. NFT utility aims to add tangible value to digital assets, potentially increasing their appeal and long-term worth by offering real-world applications or digital perks. The specific utility can vary widely depending on the project, ranging from simple access tokens to complex, multi-functional digital assets that serve various purposes within an ecosystem." },
    multiverse_items: { name: "Multiverse Items", definition: "A Multiverse Item is a digital asset, typically represented as an NFT (Non-Fungible Token), that possesses utility across multiple, unrelated games or virtual environments within a broader ecosystem, often referred to as a \"multiverse.\" These items can be used, traded, or interacted with in different games or platforms, providing players with cross-game experiences and value. The concept is designed to enhance player engagement by allowing assets to transcend individual game boundaries, thereby increasing their overall utility and desirability." },
    multiverse_quests: { name: "Multiverse Quests", definition: "A Multiverse Quest is a special event or challenge within the multiverse ecosystem that involves players using or earning Multiverse Items across multiple games or platforms. These quests are designed to engage players by encouraging them to explore different games, complete specific tasks, and earn rewards, typically in the form of rare or valuable Multiverse Items. Each quest usually focuses on a particular item and provides a structured way for players to interact with various games, fostering cross-game engagement and building a cohesive experience within the multiverse." },
    multiverse_codex: { name: "Multiverse Codex", definition: "(enjin.io/multiverse) The Multiverse Codex is a curated digital directory or catalog that lists and showcases various Multiverse Items, along with the games or platforms where these items can be utilized. It serves as a central hub for players to discover which games support their Multiverse Items and provides guidance on how to use these items across different environments within the multiverse. The Codex helps players maximize the utility of their items by connecting them with the available experiences, quests, and rewards across multiple games." },
    the_multiverse: { name: "The Multiverse", definition: "The Multiverse is a groundbreaking cross-game ecosystem that empowers developers with a powerful growth engine, driving player acquisition and retention. By integrating Multiverse Items into their games, developers tap into the Multiverse Codex - a robust inbound funnel that promotes their games and gives players compelling reasons to engage. Players participate in monthly Multiverse Quests, earning unique rewards that enhance their in-game experience. As more developers join, the utility and desirability of Multiverse Items grow, creating a self-sustaining cycle of engagement and expansion that fuels exponential growth across the entire Enjin Ecosystem." },
    mint: { name: "Mint", definition: "Minting refers to the process of creating new units of a MultiToken on the Enjin Blockchain." },
    token_account: { name: "Token Account", definition: "A token account is stored in user account. It holds the account's MultiToken states like it's balance, freeze state, etc." },
    burn: { name: "Burn", definition: "Burning a MultiToken refers to the act of destroying token units. Tokens can be burned by invoking the 'burn' extrinsic.\n\nFor tokens with the \"Collapsing Supply\" cap type, burning token units decreases the maximum supply of the token, ensuring that any burned units cannot be re-minted." },
    melt: { name: "Melt", definition: "\"Melting\" is a term used to describe the process of burning a MultiToken that contains an ENJ infusion. This process not only destroys the token but also releases the infused ENJ to the token holder. Note that \"melting\" is a conceptual term and does not exist as a specific function in the blockchain code." },
    multi_unit_token: { name: "Multi-Unit Token", definition: "Multi-Unit Tokens are digital tokens on a blockchain that are interchangeable with other tokens of the same type and value. Multi-Unit Tokens on the Enjin Blockchain are MultiTokens with multiple quantities, and they can have decimal places, similar to traditional currencies. An example of a such token is a twenty-dollar bill, where each bill has the same value and can be exchanged for another twenty-dollar bill." },
    nft: { name: "NFT", definition: "An NFT (non-fungible token) is a distinct and exceptional digital asset built on the blockchain. These assets can include various things like gaming items, digital artwork, sports collectibles, and even physical assets. With NFTs, new economic models and interconnected digital realities are emerging. Unlike Multi-unit tokens, each NFT is unique, making it impossible to exchange one NFT with another at an equivalent value." },
    collection: { name: "Collection", definition: "A Collection in the blockchain realm refers to a project on the Enjin blockchain that permits developers and users to design both Multi-Unit Tokens and Non-Fungible Tokens (NFTs) under a specific collection. \nThrough a collection on Enjin, the owner can set up and customize both Multi-Unit Tokens and non-fungible tokens without limitations on the amount. \n\nAdditionally, one can establish specific properties that are applicable to all tokens generated within the collection, such as forcing all tokens into the forced collapsing supply mode and configuring royalties for the entire collection for future marketplace interactions." },
    multitoken: { name: "MultiToken", definition: "A token stored in the MultiTokens pallet is usually referred to as a \"MultiToken\".\nMultiTokens is a Pallet on the Enjin Blockchain designed for token creation.\nSimilar to the ERC-1155 standard on Ethereum, MultiTokens supports both NFTs (Non-Fungible Tokens) and Multi-Unit Tokens within a single framework. However, unlike ERC-1155, MultiTokens is integrated as a native pallet on the Enjin Blockchain, allowing users to create tokens quickly and securely without the need to deploy smart contracts." },
    enjin_platform_cloud: { name: "Enjin Platform Cloud", definition: "A cloud hosted Enjin Platform that allows you to kickstart your next NFT project in just a few minutes. Ran on Enjin's robust servers, yet fully secure and isolated to your unique project instance, you can launch your NFT game with a few simple steps. Just create an account, set it up, generate your first API key, and voila! Your NFT game is operational." },
    enterprise_on_prem_platform: { name: "Enterprise On-Prem Enjin Platform", definition: "The Enterprise On-Prem Enjin platform is the most powerful and advanced open-source framework for building NFT platforms. This provides you with comprehensive control over your data, eliminating dependence on any third-party servers or services." },
  };
  
  export default glossary;
  


